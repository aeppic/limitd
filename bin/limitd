#!/usr/bin/env node

process.title = 'limitd server';

const config = require('../conf');

const agent = require('../lib/agent');
const logger = agent.logger;
const metrics = agent.metrics;
const configurator = require('../lib/configurator');

const LimitdServer = require('../server');
const server = new LimitdServer(config);


server.start();

server.on('started', () => {
  if (config.configurator) {
    config.configurator.metrics = metrics;
    config.configurator.logger = logger;
    config.configurator.currentVal = config.buckets;
    const configurator = new Configurator(config.configurator);
    configurator.on('changed', server.updateBucketConfig.bind(server));
  }
});

function finish () {
  server.stop((err) => {
    process.exit(err ? 1 : 0);
  });
}

process
  .on('SIGTERM', finish)
  .on('SIGINT', finish)
  .on('uncaughtException', (err) => {
    logger.error(err);
    finish();
  });
